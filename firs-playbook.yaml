---
- name: Create EC2 instance, update inventory, and configure instance
  hosts: localhost
  gather_facts: false
  vars:
    ansible_user: ubuntu
    ansible_ssh_private_key_file: ~/keypem/yair.pem
    ssh_public_key: ~/.ssh/id_rsa.pub
    dockerfile_path: ./Dockerfile
    index_html_path: ./index.html
    docker_image_name: my-nginx-image
  tasks:
    - name: Run Python script to create EC2 instance
      command: python3 create.py
      register: ec2_creation_output

    - name: Extract EC2 public IP from the script output
      set_fact:
        ec2_public_ip: "{{ ec2_creation_output.stdout.strip() }}"

    - name: Write EC2 public IP to inventory file
      local_action:
        module: copy
        content: "[app]\n{{ ec2_public_ip }}"
        dest: inventory

- name: Setup and configure EC2 instance
  hosts: all
  become: true
  gather_facts: yes
  tasks:
    - name: Update APT package index
      ansible.builtin.apt:
        update_cache: yes

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - git
          - python3
          - python3-pip
          - curl
        state: present

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Set up the Docker repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker CE, Docker CE CLI, and containerd.io
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Install Docker Compose
      ansible.builtin.shell: |
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

    - name: Start and enable Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes
